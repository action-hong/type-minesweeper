// 定义
export type 空白 = '空白'
export type 数字 = '数字'
export type 炸弹 = '炸弹'

type 格子类型 = 空白 | 数字 | 炸弹

type 格子内容 = {
  类型: 格子类型
  被点击: boolean
  周围炸弹数: number
  被标记: boolean
}

export type 构造格子内容<
  类型 extends 格子类型,
  炸弹数 extends number = 0,
  被点击 extends boolean = false,
  被标记 extends boolean = false
> = {
  类型: 类型
  被点击: 被点击
  周围炸弹数: 炸弹数
  被标记: 被标记
}

// 结构
type 横坐标 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8
type 纵坐标 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8

type 旗子格子图 = '🚩'
type 炸弹格子图 = '💣'
type 空白格子图 = '🟦'
type 未点击格子图 = '🟪'
type 数字格子图数组 = ['0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣']

type 游戏成功 = '✔️'
type 游戏失败 = '❌'
type 游戏仍可继续 = '🧹'

type 游戏结果 = 游戏成功 | 游戏失败 | 游戏仍可继续

type 一行格子 = [
  格子内容,
  格子内容,
  格子内容,
  格子内容,
  格子内容,
  格子内容,
  格子内容,
  格子内容,
  格子内容
]

type 游戏 = [
  一行格子,
  一行格子,
  一行格子,
  一行格子,
  一行格子,
  一行格子,
  一行格子,
  一行格子,
  一行格子
]

type 加法表 = [1, 2, 3, 4, 5, 6, 7, 8, 9, never]
type 减法表 = [never, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

// https://github.com/fc01/TypeGame/blob/master/src/utils.ts#L4
type 查表<表格, 数字, 值 = never> = 数字 extends keyof 表格 ? 表格[数字] : 值

type 加一<数字> = 查表<加法表, 数字>
type 减一<数字> = 查表<减法表, 数字>

type 五 = 减一<6>

// 替换某一个行的格子
type 替换某一行的某个格子<
  某一行,
  新的格子,
  替换横坐标 extends 横坐标,
  暂存替换格子前面所有格子的数组 extends any[] = []
> = 某一行 extends [infer 头, ...infer 剩余的]
  ? 替换横坐标 extends 0
    ? [...暂存替换格子前面所有格子的数组, 新的格子, ...剩余的]
    : 替换某一行的某个格子<
        剩余的,
        新的格子,
        减一<替换横坐标>,
        [...暂存替换格子前面所有格子的数组, 头]
      >
  : []

type 替换游戏的某行<
  游戏,
  新的一行,
  替换纵坐标 extends 纵坐标,
  暂存替换行前面所有行的数组 extends any[] = []
> = 游戏 extends [infer 头, ...infer 剩余的]
  ? 替换纵坐标 extends 0
    ? [...暂存替换行前面所有行的数组, 新的一行, ...剩余的]
    : 替换游戏的某行<
        剩余的,
        新的一行,
        减一<替换纵坐标>,
        [...暂存替换行前面所有行的数组, 头]
      >
  : []

type 替换游戏中的某个格子<
  某局游戏 extends 游戏,
  新格子 extends 格子内容,
  替换横坐标 extends 横坐标,
  替换纵坐标 extends 纵坐标
> = 替换游戏的某行<
  某局游戏,
  替换某一行的某个格子<某局游戏[替换纵坐标], 新格子, 替换横坐标>,
  替换纵坐标
>

// 点击，标记
type 点击<
  某局游戏 extends 游戏,
  横 extends 横坐标,
  纵 extends 纵坐标
> = 某局游戏[纵][横] extends infer 旧格子
  ? 旧格子 extends 格子内容
    ? 旧格子['被点击'] extends false
      ? 旧格子['被标记'] extends false
        ? 替换游戏中的某个格子<
            某局游戏,
            构造格子内容<
              旧格子['类型'],
              旧格子['周围炸弹数'],
              true,
              旧格子['被标记']
            >,
            横,
            纵
          >
        : 某局游戏
      : 某局游戏
    : never
  : never

type 标记<
  某局游戏 extends 游戏,
  横 extends 横坐标,
  纵 extends 纵坐标
> = 某局游戏[纵][横] extends infer 旧格子
  ? 旧格子 extends 格子内容
    ? 旧格子['被点击'] extends false
      ? 替换游戏中的某个格子<
          某局游戏,
          构造格子内容<
            旧格子['类型'],
            旧格子['周围炸弹数'],
            旧格子['被点击'],
            旧格子['被标记'] extends true ? false : true
          >,
          横,
          纵
        >
      : 某局游戏
    : never
  : never

type 渲染格子<某个格子 extends 格子内容> = 某个格子['被点击'] extends false
  ? 某个格子['被标记'] extends true
    ? 旗子格子图
    : 未点击格子图
  : 某个格子['类型'] extends 空白
  ? 空白格子图
  : 某个格子['类型'] extends 炸弹
  ? 炸弹格子图
  : 数字格子图数组[某个格子['周围炸弹数']]

type 渲染一行格子<
  某一行格子,
  渲染结果 extends string = ''
> = 某一行格子 extends [infer 第一个格子, ...infer 剩余格子]
  ? 第一个格子 extends 格子内容
  ? 渲染一行格子<剩余格子, `${渲染结果}${渲染结果 extends '' ? '' : ' '}${渲染格子<第一个格子>}`>
  : 渲染结果
  : 渲染结果

type 渲染游戏<
  某局游戏 extends 游戏
> = {
  [key in 纵坐标]: 渲染一行格子<某局游戏[key]>
}

type 检查格子<
  某个格子 extends 格子内容
> = 某个格子['被点击'] extends true
  ? 某个格子['类型'] extends 炸弹
    ? 游戏失败
    : 游戏成功
  : 某个格子['类型'] extends 炸弹
    ? 游戏成功
    : 游戏仍可继续

type 检查某一行<
  某一行,
  结果 extends 游戏结果 = 游戏成功
> = 某一行 extends [infer 第一个格子, ...infer 剩余的]
  ? 第一个格子 extends 格子内容
    ? 检查格子<第一个格子> extends infer 第一个结果
      ? 第一个结果 extends 游戏失败
        ? 游戏失败
        : 第一个结果 extends 游戏仍可继续
          ? 检查某一行<剩余的, 游戏仍可继续>
          : 结果 extends 游戏仍可继续
            ? 检查某一行<剩余的, 游戏仍可继续>
            : 检查某一行<剩余的, 游戏成功>
      : never
    : never
  :结果

type 检查游戏<
  某局游戏,
  结果 extends 游戏结果 = 游戏成功
> = 某局游戏 extends [infer 第一行, ...infer 剩余行]
  ? 第一行 extends 一行格子
    ? 检查某一行<第一行> extends infer 第一个结果
      ? 第一个结果 extends 游戏失败
        ? 游戏失败
        : 第一个结果 extends 游戏仍可继续
          ? 检查游戏<剩余行, 游戏仍可继续>
          : 结果 extends 游戏仍可继续
            ? 检查游戏<剩余行, 游戏仍可继续>
            : 检查游戏<剩余行, 游戏成功>
      : never
    : never
  : 结果



type 某局游戏 = 
  [
    [
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>
    ],
    [
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<空白>
    ],
    [
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<数字, 1>,
      构造格子内容<炸弹>,
      构造格子内容<数字, 2>,
      构造格子内容<炸弹>,
      构造格子内容<数字, 3>,
      构造格子内容<数字, 2>
    ],
    [
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 2>,
      构造格子内容<炸弹>,
      构造格子内容<炸弹>
    ],
    [
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 2>,
      构造格子内容<炸弹>,
      构造格子内容<数字, 1>,
      构造格子内容<空白>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 2>
    ],
    [
      构造格子内容<数字, 1>,
      构造格子内容<炸弹>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<空白>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 2>
    ],
    [
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<数字, 1>,
      构造格子内容<炸弹>,
      构造格子内容<炸弹>
    ],
    [
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 1>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<数字, 1>,
      构造格子内容<数字, 2>,
      构造格子内容<数字, 2>
    ],
    [
      构造格子内容<数字, 1>,
      构造格子内容<炸弹>,
      构造格子内容<数字, 1>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>,
      构造格子内容<空白>
    ]
  ]

type r1 = 渲染游戏<某局游戏>

type g2 = 点击<某局游戏, 4, 2>

type r2 = 渲染游戏<g2>

type c2 = 检查游戏<g2>

// 一次性点击所有非炸弹
type 成功的游戏 = 点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击< 
点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<点击<某局游戏, 0, 0>, 1, 0>, 2, 0>, 3, 0>, 4, 0>, 5, 0>, 6, 0>, 7, 0>, 8, 0>, 0, 1>, 1, 1>, 2, 1>, 3, 1>, 4, 1>, 5, 1>, 6, 1>, 7, 1>, 8, 1>, 0, 2>, 1, 2>, 2, 2>, 3, 2>, 5, 2>, 7, 2>, 8, 2>, 0, 3>, 1, 3>, 2, 3>, 3, 3>, 4, 3>, 5, 3>, 6, 3>, 0, 4>, 1, 4>, 2, 4>, 4, 4>, 5, 4>, 6, 4>, 7, 4>, 8, 4>, 0, 5>, 2, 5>, 3, 5>, 4, 5>, 5, 5>, 6, 5>, 7, 5>, 8, 5>, 0, 6>, 1, 6>, 2, 6>, 3, 6>, 4, 6>, 5, 6>, 6, 6>, 0, 7>, 1, 7>, 2, 7>, 3, 7>, 4, 7>, 5, 7>, 6, 7>, 7, 7>, 8, 7>, 0, 8>, 2, 8>, 3, 8>, 4, 8>, 5, 8>, 6, 8>, 7, 8>, 8, 8>

type r3 = 渲染游戏<成功的游戏>
// 算不出来了，需要4.5.0版本以上的ts
type c3 = 检查游戏<成功的游戏>